// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PaninApi.Infrastructure;

namespace PaninApi.Infrastructure.Migrations
{
    [DbContext(typeof(PaninApiDbContext))]
    [Migration("20200927170908_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PaninApi.Core.Models.BaseUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .IsUnicode(true);

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasColumnType("text")
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("BaseUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseUser");
                });

            modelBuilder.Entity("PaninApi.Core.Models.CoffeeShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("CoffeeShops");
                });

            modelBuilder.Entity("PaninApi.Core.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Availability")
                        .HasColumnType("integer");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<int>("CoffeeShopId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .IsUnicode(true);

                    b.Property<int>("Modifiers")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30)
                        .IsUnicode(true);

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeShopId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("PaninApi.Core.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CoffeeShopId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .IsUnicode(true);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeShopId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PaninApi.Core.Models.OrderItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.HasKey("ItemId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("PaninApi.Core.Models.Barman", b =>
                {
                    b.HasBaseType("PaninApi.Core.Models.BaseUser");

                    b.Property<int>("CoffeShopId")
                        .HasColumnType("integer");

                    b.HasIndex("CoffeShopId");

                    b.HasDiscriminator().HasValue("Barman");
                });

            modelBuilder.Entity("PaninApi.Core.Models.User", b =>
                {
                    b.HasBaseType("PaninApi.Core.Models.BaseUser");

                    b.Property<bool>("IsResponsible")
                        .HasColumnType("boolean");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("PaninApi.Core.Models.Item", b =>
                {
                    b.HasOne("PaninApi.Core.Models.CoffeeShop", "CoffeeShop")
                        .WithMany("Items")
                        .HasForeignKey("CoffeeShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaninApi.Core.Models.Order", b =>
                {
                    b.HasOne("PaninApi.Core.Models.CoffeeShop", "CoffeeShop")
                        .WithMany("Orders")
                        .HasForeignKey("CoffeeShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaninApi.Core.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PaninApi.Core.Models.StudentClass", "Class", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uuid");

                            b1.Property<char>("Class")
                                .HasColumnType("character(1)");

                            b1.Property<string>("Section")
                                .HasColumnType("text");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });
                });

            modelBuilder.Entity("PaninApi.Core.Models.OrderItem", b =>
                {
                    b.HasOne("PaninApi.Core.Models.Item", "Item")
                        .WithMany("Orders")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaninApi.Core.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaninApi.Core.Models.Barman", b =>
                {
                    b.HasOne("PaninApi.Core.Models.CoffeeShop", "CoffeeShop")
                        .WithMany("Barmen")
                        .HasForeignKey("CoffeShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}

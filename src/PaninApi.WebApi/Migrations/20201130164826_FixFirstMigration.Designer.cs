// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PaninApi.WebApi;

namespace PaninApi.WebApi.Migrations
{
    [DbContext(typeof(PaninApiDbContext))]
    [Migration("20201130164826_FixFirstMigration")]
    partial class FixFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("PaninApi.Abstractions.Models.BarmanCoffeeShop", b =>
                {
                    b.Property<string>("BarmanId")
                        .HasColumnType("text");

                    b.Property<int>("CoffeeShopId")
                        .HasColumnType("integer");

                    b.HasKey("BarmanId", "CoffeeShopId");

                    b.HasIndex("CoffeeShopId");

                    b.ToTable("BarmanCoffeeShops");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.BaseUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BaseUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseUser");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.CoffeeShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("SchoolId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("CoffeeShops");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Availability")
                        .HasColumnType("integer");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<int>("CoffeeShopId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("text");

                    b.Property<int>("Modifiers")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeShopId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CoffeeShopId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Notes")
                        .IsUnicode(true)
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeShopId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.OrderItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.HasKey("ItemId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("text");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Barman", b =>
                {
                    b.HasBaseType("PaninApi.Abstractions.Models.BaseUser");

                    b.HasDiscriminator().HasValue("Barman");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Student", b =>
                {
                    b.HasBaseType("PaninApi.Abstractions.Models.BaseUser");

                    b.Property<int>("SchoolId")
                        .HasColumnType("integer");

                    b.HasIndex("SchoolId");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.BarmanCoffeeShop", b =>
                {
                    b.HasOne("PaninApi.Abstractions.Models.Barman", "Barman")
                        .WithMany("CoffeeShops")
                        .HasForeignKey("BarmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaninApi.Abstractions.Models.CoffeeShop", "CoffeeShop")
                        .WithMany("Barmen")
                        .HasForeignKey("CoffeeShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barman");

                    b.Navigation("CoffeeShop");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.CoffeeShop", b =>
                {
                    b.HasOne("PaninApi.Abstractions.Models.School", "School")
                        .WithMany("CoffeeShops")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Item", b =>
                {
                    b.HasOne("PaninApi.Abstractions.Models.CoffeeShop", "CoffeeShop")
                        .WithMany("Items")
                        .HasForeignKey("CoffeeShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoffeeShop");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Order", b =>
                {
                    b.HasOne("PaninApi.Abstractions.Models.CoffeeShop", "CoffeeShop")
                        .WithMany("Orders")
                        .HasForeignKey("CoffeeShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaninApi.Abstractions.Models.Student", "Student")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PaninApi.Abstractions.Models.StudentClass", "Class", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Class")
                                .HasColumnType("integer");

                            b1.Property<string>("Section")
                                .HasColumnType("text");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.Navigation("Class");

                    b.Navigation("CoffeeShop");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.OrderItem", b =>
                {
                    b.HasOne("PaninApi.Abstractions.Models.Item", "Item")
                        .WithMany("Orders")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaninApi.Abstractions.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Student", b =>
                {
                    b.HasOne("PaninApi.Abstractions.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PaninApi.Abstractions.Models.StudentClass", "StudentClass", b1 =>
                        {
                            b1.Property<string>("StudentId")
                                .HasColumnType("text");

                            b1.Property<int>("Class")
                                .HasColumnType("integer");

                            b1.Property<string>("Section")
                                .HasColumnType("text");

                            b1.HasKey("StudentId");

                            b1.ToTable("BaseUsers");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });

                    b.Navigation("School");

                    b.Navigation("StudentClass");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.CoffeeShop", b =>
                {
                    b.Navigation("Barmen");

                    b.Navigation("Items");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Item", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.School", b =>
                {
                    b.Navigation("CoffeeShops");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Barman", b =>
                {
                    b.Navigation("CoffeeShops");
                });

            modelBuilder.Entity("PaninApi.Abstractions.Models.Student", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
